# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    ##- run: npm test
    
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #   #- name: Deploy to Elastic Beanstalk
  #   - uses: hmanzur/actions-aws-eb@v1.0.0
  #     with:
  #       command: 'deploy ${{ secrets.ENVIRONMENT_NAME }}'
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       AWS_DEFAULT_REGION: "us-east-1"
  
  deploy_aws:
    needs: [create_eb_version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6 (needed for eb cli)
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-id: ${{ secrets.AWS_ID }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-default_region: "us-east-1"
      - run: |
# AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}

          echo "Installing Elastic Beanstalk Cli"
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version

          echo "Deploy init"
          eb init 
      # -i ${{env.APP_NAME}} -p ${{env.AWS_PLATFORM}} -k ${{secrets.AWS_ID}} --region ${{env.AWS_REGION}}
          eb deploy 
      # ${{env.APP_NAME}} --version ${AWS_VERSION_LABEL}
          echo "Deploy finished"
